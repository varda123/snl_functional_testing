<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="6" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="185" started-at="2018-06-22T12:08:10Z" finished-at="2018-06-22T12:08:10Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="185" started-at="2018-06-22T12:08:10Z" finished-at="2018-06-22T12:08:10Z">
      <class name="com.qainfotech.tap.training.snl.api.BoardTest">
        <test-method status="PASS" signature="maxPlayer_test()[pri:0, instance:com.qainfotech.tap.training.snl.api.BoardTest@58651fd0]" name="maxPlayer_test" duration-ms="85" started-at="2018-06-22T17:38:10Z" finished-at="2018-06-22T17:38:10Z">
          <exception class="com.qainfotech.tap.training.snl.api.MaxPlayersReachedExeption">
            <message>
              <![CDATA[The board already has maximum allowed Player: 4]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.qainfotech.tap.training.snl.api.MaxPlayersReachedExeption: The board already has maximum allowed Player: 4
	at com.qainfotech.tap.training.snl.api.Board.registerPlayer(Board.java:68)
	at com.qainfotech.tap.training.snl.api.BoardTest.maxPlayer_test(BoardTest.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.qainfotech.tap.training.snl.api.MaxPlayersReachedExeption -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maxPlayer_test -->
        <test-method status="PASS" signature="nameRedundancy_test()[pri:0, instance:com.qainfotech.tap.training.snl.api.BoardTest@58651fd0]" name="nameRedundancy_test" duration-ms="9" started-at="2018-06-22T17:38:10Z" finished-at="2018-06-22T17:38:10Z">
          <exception class="com.qainfotech.tap.training.snl.api.PlayerExistsException">
            <message>
              <![CDATA[Player 'varda1' already exists on board]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.qainfotech.tap.training.snl.api.PlayerExistsException: Player 'varda1' already exists on board
	at com.qainfotech.tap.training.snl.api.Board.registerPlayer(Board.java:73)
	at com.qainfotech.tap.training.snl.api.BoardTest.nameRedundancy_test(BoardTest.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.qainfotech.tap.training.snl.api.PlayerExistsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- nameRedundancy_test -->
        <test-method status="PASS" signature="position_test()[pri:0, instance:com.qainfotech.tap.training.snl.api.BoardTest@58651fd0]" name="position_test" duration-ms="11" started-at="2018-06-22T17:38:10Z" finished-at="2018-06-22T17:38:10Z">
          <exception class="com.qainfotech.tap.training.snl.api.GameInProgressException">
            <message>
              <![CDATA[New player cannot join since the game has started]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.qainfotech.tap.training.snl.api.GameInProgressException: New player cannot join since the game has started
	at com.qainfotech.tap.training.snl.api.Board.registerPlayer(Board.java:76)
	at com.qainfotech.tap.training.snl.api.BoardTest.position_test(BoardTest.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.qainfotech.tap.training.snl.api.GameInProgressException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- position_test -->
        <test-method status="PASS" signature="registerPlayer_test()[pri:0, instance:com.qainfotech.tap.training.snl.api.BoardTest@58651fd0]" name="registerPlayer_test" duration-ms="11" started-at="2018-06-22T17:38:10Z" finished-at="2018-06-22T17:38:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerPlayer_test -->
        <test-method status="PASS" signature="turn_test()[pri:0, instance:com.qainfotech.tap.training.snl.api.BoardTest@58651fd0]" name="turn_test" duration-ms="12" started-at="2018-06-22T17:38:10Z" finished-at="2018-06-22T17:38:10Z">
          <exception class="com.qainfotech.tap.training.snl.api.InvalidTurnException">
            <message>
              <![CDATA[Player 'c5584190-dda0-4acd-ab28-264574c50452' does not have the turn]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.qainfotech.tap.training.snl.api.InvalidTurnException: Player 'c5584190-dda0-4acd-ab28-264574c50452' does not have the turn
	at com.qainfotech.tap.training.snl.api.Board.rollDice(Board.java:165)
	at com.qainfotech.tap.training.snl.api.BoardTest.turn_test(BoardTest.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.qainfotech.tap.training.snl.api.InvalidTurnException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- turn_test -->
        <test-method status="PASS" signature="validRoll_test()[pri:0, instance:com.qainfotech.tap.training.snl.api.BoardTest@58651fd0]" name="validRoll_test" duration-ms="15" started-at="2018-06-22T17:38:10Z" finished-at="2018-06-22T17:38:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validRoll_test -->
      </class> <!-- com.qainfotech.tap.training.snl.api.BoardTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
